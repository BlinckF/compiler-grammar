! Welcome to GOLD Parser Builder 5.2
"Case Sensitive" = True
"Start Symbol"   = <Type>
                 
! -------- Tokens ---------------------------------
{Id Head}        = {Letter} + [_]
{Id Tail}        = {Id Head} + {Digit}

{String Ch}      = {Printable} - ["]
{Char Ch}        = {Printable} - ['']

DecLiteral       = [123456789]{digit}*
FloatLiteral     = {Digit}*'.'{Digit}+

StringLiteral    = '"'( {String Ch} | '\'{Printable} )* '"'
CharLiteral      = '' ( {Char Ch} | '\'{Printable} )''

Id               = {Id Head}{Id Tail}*
                 
!----------------------- Types -----------------------------------
<Type>     ::= struct Id
             | int
             | real
             | boolean
             | string  
             | Id

!----------------------- Expressions ---------------------------
<Expr>        ::= <Op Assign> <Expr>
               | <Op Assign>

<Op Assign>   ::= <Op Assign> '=' <Op Or> 
               | <Op Or> 

<Op Or>       ::= <Op Or> '||' <Op And>
               | <Op And>

<Op And>      ::= <Op And> '&&' <Op Equate>
               | <Op Equate>

<Op Equate>   ::= <Op Equate> '==' <Op Compare>
               | <Op Equate> '!=' <Op Compare>
               | <Op Compare>

<Op Compare>  ::= <Op Compare> '<'  <Op Add>
               | <Op Compare> '>'  <Op Add>
               | <Op Compare> '<=' <Op Add>
               | <Op Compare> '>=' <Op Add>
               | <Op Add>

<Op Add>      ::= <Op Add> '+' <Op Mult>
               | <Op Add> '-' <Op Mult>
               | <Op Mult>

<Op Mult>     ::= <Op Mult> '*' <Op Unary>
               | <Op Mult> '/' <Op Unary>
               | <Op Unary>

<Op Unary>    ::= '!'    <Op Unary>             
               | '++'   <Op Unary>
               | '--'   <Op Unary>
               | <Value>

<Value>       ::= NumberLiteral
               | Id
               | DecLiteral
               | FloatLiteral
               | '(' <Expr> ')'

